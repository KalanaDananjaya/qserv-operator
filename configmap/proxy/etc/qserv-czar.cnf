[frontend]

xrootd={{.XrootdRedirectorDn}}:1094

#[mgmtdb]
#db=qservMeta
# Steal resultdb settings for now.

[css]
technology = mysql
hostname =
port =
username = qsmaster
password =
database = qservCssData
socket = /qserv/data/mysql/mysql.sock

[resultdb]
passwd =
db = qservResult
unix_socket = /qserv/data/mysql/mysql.sock
host =
user= qsmaster
port = 0
# maximum user query result size in MB
maxtablesize_mb = 5100

# database connection for QMeta database
[qmeta]
passwd =
db = qservMeta
unix_socket = /qserv/data/mysql/mysql.sock
host =
user = qsmaster
port = 0

# database connection for QStatusData
# Using qmeta for now. May move this qservResult or make its own instance
# databse based on what happens with multiple czars.
[qstatus]
passwd =
#db = qservStatusData
db = qservMeta
user = qsmaster
# host = {{.QstatusMysqldHost}}
host = 127.0.0.1
port = 3306

[partitioner]
# emptyChunkPath is used to check existence of empty_$DBNAME.txt
emptyChunkPath = /qserv/data/qserv

# If emptyChunkPath isn't defined or emptyChunkPath/empty_$DBNAME.txt
# doesn't exist then emptyChunkListFile is used for queries on $DBNAME
emptyChunkListFile = /qserv/data/qserv/emptyChunks.txt

[tuning]
#memoryEngine = yes
#largeResultConcurrentMerges = 3
largeResultConcurrentMerges = 6
# xrootdCBThreadsInit must be less than xrootdCBThreadsMax
xrootdCBThreadsMax = 500
xrootdCBThreadsInit = 50
# Seconds between updates the czar sends to qmeta for completed chunks.
# This is per user query and important milestones ignore this limit.
qMetaSecsBetweenChunkCompletionUpdates = 59

#[debug]
#chunkLimit = -1

[log]
logConfig = /config-etc/log4cxx.czar.properties
